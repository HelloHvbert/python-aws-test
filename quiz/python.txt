What is __main__.py used for?

It lets us define how a package should behave when executed, similar to if __name__ == "__main__".
It also make packages directly runnable from the CLI.
----------------------------------------------------------------------------------------------
How to prevent python module code from executing when the module is imported?

def main():
	pass

if __name__ == "__main__":
    #run when the module is executed directly
    main()
----------------------------------------------------------------------------------------------
What's the name of method that represents a class constructor in Python?

class constructor function in Python is called __init__
example:
class ExampleClass:
	def __init__(self, name):
		self.name = name
----------------------------------------------------------------------------------------------
What options do you have when you need to insert value of a variable into string? Name at least three.

let's have variable:
name = 'Ala'

1. f-string:
print(f"{name} has a cat")
2. string concatenation
print(name + "has a cat")
3. str.format()
print("{} has a cat".format(name))
----------------------------------------------------------------------------------------------
How can you truly restrict access to a private method of a class in Python?

You can't truly restrict access to private method in Python class like in C# or Java.
There is one way to simulate private method where you need add __ before function name.
Example:
# it won't work
cls = SomeClass()
cls.__private_method()

# you can bypass it
cls._SomeClass__private_method()
----------------------------------------------------------------------------------------------
What Python feature would you use to add some functionalities to an existing function without interfering into its code?

For it I would use decorators, which takes function as an input and we can add some functionality to it, before or after execution original function without modifying it.

Example:
def deco(func):
	def wrapper():
		print('Before')
		func()
		print('after')
	return wrapper

# Adding decorator to function
@deco
def some_func():
	print('Hello world!')
----------------------------------------------------------------------------------------------
How is @staticmethod different from @classmethod?

@staticmethod is used when method doesn't need to know anything about class
@classmethod is used when method needs to work with class, like update class state
----------------------------------------------------------------------------------------------
What is the advantage of using with keyword when reading/writing a file in Python?

Files are closed automatically after 'with' block is exited, so there is no need to use file.close().